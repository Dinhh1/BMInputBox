{"name":"BMInputBox","tagline":"iOS drop-in class that displays input boxes for the user to input different kinds of data.","body":"# BMInputBox\r\n\r\nBMInputBox is an iOS drop-in class that displays input boxes for the user to input different kinds of data, for instance username and password, email address, numbers, plain text. BMInputBox is meant as a replacement for the limited UIAlertView input options.\r\n\r\n![alt tag](http://blackmirror.media/github/BMInputBoxPlainText.png)\r\n![alt tag](http://blackmirror.media/github/BMInputBoxLoginFilled.png)\r\n\r\n## Requirements\r\n\r\nBuilt in Swift for iOS 8.1+. All devices supported.\r\n\r\n## Adding BMInputBox To Your Project\r\n\r\n### Cocoapods\r\n\r\nCocoaPods is the recommended way to add BMInputBox to your project. As soon as they solve the problems with Swift pods...\r\n\r\n**Until that time, simply add the `BMInputBox.swift` file to your project.**\r\n\r\n## Usage\r\n\r\n#### Creating an input box\r\n\r\n```Swift\r\nvar inputBox = BMInputBox.boxWithStyle(.NumberInput)\r\ninputBox.show()\r\n```\r\n\r\nAvailable styles:\r\n* `.PlainTextInput` - Simple text field\r\n* `.NumberInput` - Text field accepting numbers only - numeric keyboard\r\n* `.PhoneNumberInput` - Text field accepting numbers only - phone keyboard\r\n* `.EmailInput` - Text field accepting email addresses -  email keyboard\r\n* `.SecureTextInput` - Secure text field for passwords\r\n* `.LoginAndPasswordInput` - Two text fields for user and password entry\r\n\r\n#### Customising the box\r\n\r\nChanging the blur effect (UIBlurEffectStyle: .ExtraLight, .Light, .Dark).\r\n\r\n```Swift\r\ninputBox.blurEffectStyle = .Light\r\n```\r\n\r\nTitle and message.\r\n\r\n```Swift\r\ninputBox.title = \"This is the title\"\r\ninputBox.message = \"This is a longer messages that can be wrapped into multiple lines but maximum three.\"\r\n```\r\n\r\nMandatory decimals for the .NumberInput type. Default is 0. If set, the user input will be convertd to Double with 2 decimals. For instance \"1\" becomes \"0.01\" and \"1234\" becomes \"12.34\".\r\n\r\n```Swift\r\ninputBox.numberOfDecimals = 2\r\n```\r\n\r\nDoing whatever you need with the textField in the box.\r\n\r\n```Swift\r\ninputBox.customiseInputElement = {(element: UITextField) in\r\n  element.placeholder = \"Custom placeholder\"\r\n  if element.secureTextEntry == true {\r\n    element.placeholder = \"Secure placeholder\"\r\n  }\r\n  return element\r\n}\r\n```\r\n\r\n### Closures for submission and cancellation\r\n\r\n```Swift\r\ninputBox.onSubmit = {(value: AnyObject...) in\r\n  for text in value {\r\n    if text is String {\r\n      NSLog(\"%@\", text as String)\r\n    }\r\n    else if text is NSDate {\r\n      NSLog(\"%@\", text as NSDate)\r\n    }\r\n    else if text is Int {\r\n      NSLog(\"%i\", text as Int)\r\n    }\r\n  }\r\n}\r\n```\r\n```Swift\r\ninputBox.onCancel = {\r\n  NSLog(\"Cancelled\")\r\n}\r\n```\r\n","google":"UA-59696125-1","note":"Don't delete this file! It's used internally to help with page regeneration."}